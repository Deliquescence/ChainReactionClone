/*
 * Copyright (c) 2014, Deliquescence <Deliquescence1@gmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * - Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * - Neither the name of the copyright holder nor the names of its contributors
 *   may be used to endorse or promote products derived from this software
 *   without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
package deliquescence.panel;

/**
 * This panel is meant to be a subpanel. It contains components for choosing settings in a game.
 *
 * @author Josh
 */
public class GameSettings extends javax.swing.JPanel {

    /**
     * Creates new form GameSettingsPanel
     */
    public GameSettings() {
        initComponents();
    }

    /**
     * Setting for the RNG button.
     *
     * @return True if the RNG button should be enabled
     */
    public boolean EnableRNGButton() {
        return RNGCheck.isSelected();
    }

    /**
     * Setting for the turn timer.
     *
     * @return True if the turn timer should be enabled.
     */
    public boolean EnableTurnTimer() {
        return TimerCheck.isSelected();
    }

    /**
     * Setting for the length of the turn timer, if it is enabled.
     *
     * @return The length of the timer in seconds.
     */
    public int TimerLength() {
        return TimerSlider.getValue();
    }

    /**
     * Setting to randomize the starting player.
     *
     * @return True if the starting player should be random.
     */
    public boolean RandomStartPlayer() {
        return RandomizePlayerCheck.isSelected();
    }

    /**
     * Setting for what should happen when the turn timer expires.
     *
     * @return True if the turn should RNG when timer expires.
     */
    public boolean timerExpireRNG() {
        return timerExpireRadio2.isSelected();
    }

    /**
     * Setting for what should happen when the turn timer expires.
     *
     * @return True if the turn should skip when timer expires.
     */
    public boolean timerExpireSkip() {
        return timerExpireRadio1.isSelected();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        RandomizePlayerCheck = new javax.swing.JCheckBox();
        RNGCheck = new javax.swing.JCheckBox();
        TimerCheck = new javax.swing.JCheckBox();
        TimerLabel1 = new javax.swing.JLabel();
        timerExpireRadio1 = new javax.swing.JRadioButton();
        timerExpireRadio2 = new javax.swing.JRadioButton();
        TimerLabel2 = new javax.swing.JLabel();
        TimerSlider = new javax.swing.JSlider();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        RandomizePlayerCheck.setSelected(true);
        RandomizePlayerCheck.setText("Randomize Players");
        RandomizePlayerCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomizePlayerCheckActionPerformed(evt);
            }
        });
        add(RandomizePlayerCheck);

        RNGCheck.setText("Enable RNG Button");
        RNGCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RNGCheckActionPerformed(evt);
            }
        });
        add(RNGCheck);

        TimerCheck.setText("Enable turn timer");
        add(TimerCheck);

        TimerLabel1.setText("When timer expire:");
        add(TimerLabel1);

        buttonGroup1.add(timerExpireRadio1);
        timerExpireRadio1.setText("Skip turn");
        add(timerExpireRadio1);

        buttonGroup1.add(timerExpireRadio2);
        timerExpireRadio2.setSelected(true);
        timerExpireRadio2.setText("RNG");
        timerExpireRadio2.setToolTipText("");
        add(timerExpireRadio2);

        TimerLabel2.setText("Timer Length (sec):");
        add(TimerLabel2);

        TimerSlider.setMajorTickSpacing(2);
        TimerSlider.setMaximum(20);
        TimerSlider.setMinimum(2);
        TimerSlider.setMinorTickSpacing(1);
        TimerSlider.setPaintLabels(true);
        TimerSlider.setPaintTicks(true);
        TimerSlider.setSnapToTicks(true);
        TimerSlider.setValue(5);
        TimerSlider.setPreferredSize(new java.awt.Dimension(150, 45));
        add(TimerSlider);
    }// </editor-fold>//GEN-END:initComponents

    private void RandomizePlayerCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomizePlayerCheckActionPerformed

    }//GEN-LAST:event_RandomizePlayerCheckActionPerformed

    private void RNGCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RNGCheckActionPerformed

    }//GEN-LAST:event_RNGCheckActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox RNGCheck;
    private javax.swing.JCheckBox RandomizePlayerCheck;
    private javax.swing.JCheckBox TimerCheck;
    private javax.swing.JLabel TimerLabel1;
    private javax.swing.JLabel TimerLabel2;
    private javax.swing.JSlider TimerSlider;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton timerExpireRadio1;
    private javax.swing.JRadioButton timerExpireRadio2;
    // End of variables declaration//GEN-END:variables
}
